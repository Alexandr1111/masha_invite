import React, { useEffect, useState } from 'react';
import { motion } from 'framer-motion';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faCheck, faTimes } from '@fortawesome/free-solid-svg-icons';
import './AnimatedInvitation.css'; // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º CSS-—Ñ–∞–π–ª –¥–ª—è —Å—Ç–∏–ª–µ–π
import audioFile from './assets/applause6.mp3';

const AnimatedInvitation = () => {
  const message = "–ü—Ä—Ä–∏–≤–µ—Ç, –ú–∞—Ä–∏—è! üåπ –ü—Ä–∏–≥–ª–∞—à–∞—é —Ç–µ–±—è –Ω–∞ –∫–≤–µ—Å—Ç –≤ —Å–ª–µ–¥—É—é—â—É—é —Å—É–±–±–æ—Ç—É! –û–±–µ—â–∞—é, –±—É–¥–µ—Ç –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ!";
  const [displayedText, setDisplayedText] = useState('');
  const [showButtons, setShowButtons] = useState(false);
  const [offset, setOffset] = useState({ x: 0, y: 0 }); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–º–µ—â–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∏
  const [responseMessage, setResponseMessage] = useState(''); // –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞

  // –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç
  const audio = new Audio(audioFile); // –£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –≤–∞—à–µ–º—É –∑–≤—É–∫–æ–≤–æ–º—É —Ñ–∞–π–ª—É

  useEffect(() => {
    let i = 0;
    const typingEffect = setInterval(() => {
      setDisplayedText((prev) => prev + message.charAt(i));
      i++;
      if (i === message.length) {
        clearInterval(typingEffect);
        setShowButtons(true); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–µ—á–∞—Ç–∏
      }
    }, 150);
    return () => clearInterval(typingEffect);
  }, []);

  const getRandomOffset = () => {
    const directions = [
      { x: -100, y: 0 },   // –í–ª–µ–≤–æ
      { x: 100, y: 0 },    // –í–ø—Ä–∞–≤–æ
      { x: 0, y: -100 },   // –í–≤–µ—Ä—Ö
      { x: 0, y: 200 },    // –í–Ω–∏–∑
      { x: -100, y: -100 }, // –í–≤–µ—Ä—Ö-–≤–ª–µ–≤–æ
      { x: 100, y: -100 },  // –í–≤–µ—Ä—Ö-–≤–ø—Ä–∞–≤–æ
      { x: -100, y: 100 },  // –í–Ω–∏–∑-–≤–ª–µ–≤–æ
      { x: 100, y: 100 }    // –í–Ω–∏–∑-–≤–ø—Ä–∞–≤–æ
    ];
    return directions[Math.floor(Math.random() * directions.length)];
  };

  const handleTouchStart = () => {
    const randomOffset = getRandomOffset();
    setOffset(randomOffset);
  };

  const handleHover = () => {
    const randomOffset = getRandomOffset();
    setOffset(randomOffset);
  };

  const handleAgreeClick = () => {
    audio.play(); // –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º –∑–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç
    setResponseMessage('–£—Ä–∞! ü§© –¢–µ–ø–µ—Ä—å –ø–æ—à–ª–∏ –≤ —Ç–µ–ª–µ–∂–∫—É –æ–±—Å—É–∂–¥–∞—Ç—å –¥–µ—Ç–∞–ª–∏ :)'); // –ò–∑–º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç
  };

  return (
      <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          transition={{ duration: 1 }}
          style={{ textAlign: 'center' }} // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
      >
        <h1>{displayedText}</h1>
        {responseMessage && <h2>{responseMessage}</h2>} {/* –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ */}
        {showButtons && (
            <div className="button-container">
              <button className="icon-button" onClick={handleAgreeClick}>
                <FontAwesomeIcon icon={faCheck} />
              </button>
              <motion.button
                  className="icon-button"
                  style={{ transform: `translate(${offset.x}px, ${offset.y}px)` }} // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–º–µ—â–µ–Ω–∏–µ
                  onMouseEnter={handleHover} // –£–±–µ–≥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
                  onTouchStart={handleTouchStart} // –£–±–µ–≥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
                  onClick={(e) => {
                    e.preventDefault(); // –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º –≤—Å–ø–ª—ã—Ç–∏–µ —Å–æ–±—ã—Ç–∏—è –∫–ª–∏–∫–∞
                    e.stopPropagation(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–ª–∏–∫–∏
                  }}
              >
                <FontAwesomeIcon icon={faTimes} />
              </motion.button>
            </div>
        )}
      </motion.div>
  );
};

export default AnimatedInvitation;